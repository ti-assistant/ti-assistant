:root {
  --background-color: #131115;
  --foreground-color: #eee;

  --disabled-bg: #1a181d;
  --light-bg: #242226;
  --interactive-bg: #3a383c;
  --hovered-bg: #464448;
  --selected-bg: #4a484c;

  /* 2px at 1920 */
  --border-size: 0.084rem;
  --disabled-border: #2a282c;
  --neutral-border: #7a787c;
  --selected-border: #bab8bc;
}

html {
  box-sizing: border-box;
  font-size: clamp(16px, 1.25vw, 32px)
}

*, *:before, *:after {
  box-sizing: inherit;
}

@font-face {
  font-family: "Slider";
  src: url("Slider_Updated.ttf") format("truetype");
  font-weight: 100;
  font-style: normal;
  font-display: swap;
}

@font-face {
  font-family: "Myriad Pro";
  font-style: normal;
  font-weight: normal;
  src: local("Myriad Pro"), url("MYRIADPRO-REGULAR.woff") format("woff");
  font-display: swap;
}

@font-face {
  font-family: "Source Sans";
  font-style: normal;
  font-weight: normal;
  src: url("SourceSans3-Regular.ttf") format("truetype");
  font-display: swap;
}

body {
  font-family: "Slider";
  margin: 0px 4rem;
  background-color: var(--background-color);
  color: #eee;
}

input {
  font-size: 0.75rem;
}

.symbol {
  font-family: "Source Sans";
}

.icon {
  display: flex;
  align-items: center;
  margin-right: 0.5rem;
  box-sizing: border-box;
}

.clickable {
  cursor: pointer;
  font-weight: bold;
}

.icon.positive {
  color: darkgreen;
  font-size: 120%;
}

.icon.negative {
  color: firebrick;
  font-size: 80%;
}

.smallFont {
  font-size: 0.875rem;
}

.mediumFont {
  font-size: 1rem;
}

.largeFont {
  font-size: 1.125rem;
}

.hugeFont {
  font-size: 1.25rem;
}

.extraLargeFont {
  font-size: 1.5rem;
}

a {
  all: unset;
  cursor: pointer;
}

a:hover {
  text-shadow: 0 0 4px #eee, 0 0 4px #eee;
  color: #111;
}

a:hover > div.flexColumn {
  background-color: var(--disabled-bg);
  /* box-shadow: 2px 2px 4px #000; */
}

svg {
  display: block;
}

button {
  all: unset;
  font-size: 1.125rem;
  font-family: "Myriad Pro";
  background-color: var(--interactive-bg);
  color: #eee;
  padding: 0.1875rem 0.3125rem;
  padding: 0.1875rem 0.3125rem;
  border-radius: 0.25rem;
  cursor: pointer;
  border: var(--border-size) solid var(--background-color);
}

button:hover {
  background-color: var(--hovered-bg);
  border: var(--border-size) solid var(--neutral-border);
}

button:focus-visible {
  border: 1px solid var(--neutral-border);
}


button.faded {
  background-color: var(--disabled-bg);
  color: #555;
  box-sizing: border-box;
  border: 1px solid #333;
}

button.selected {
  border: var(--border-size) solid #aaa;
  background-color: var(--selected-bg);
  color: #fff;
}

button:disabled {
  background-color: var(--disabled-bg);
  color: var(--interactive-bg);
  box-shadow: none;
  box-sizing: border-box;
  border: var(--border-size) solid var(--disabled-border);
  cursor: default;
}

button:disabled.selected {
  background-color: var(--disabled-bg);
  color: #fff;
  box-shadow: none;
  box-sizing: border-box;
  border: var(--border-size) solid var(--selected-border);
  cursor: default;
}

input[type="text"] {
  background-color: #282828;
  color: #eee;
  box-sizing: border-box;
}

input[type="textbox"] {
  background-color: #282828;
  color: #eee;
  border: 2px solid #555;
  border-radius: 0.25rem;
  outline: none;
}

input[type="textbox"]:focus {
  border: 2px solid #aaa;
}

input[type="textbox"]:invalid {
  background-color: #333;
  color: #eee;
  border: 2px solid red;
  border-radius: 0.25rem;
  outline: none;
}

.myriadPro {
  font-family: "Myriad Pro";
}

.flexRow {
  display: flex;
  flex-direction: row;
  justify-content: space-evenly;
  align-items: center;
  gap: 0.5rem;
}

.flexColumn {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  gap: 0.5rem;
}

.popupIcon {
  margin-left: 0.5rem;
  font-size: 1rem;
  position: relative;
  cursor: pointer;
  z-index: inherit;
}

.arrowUp {
  --color: #ddd;
  width: 0;
  height: 0;
  border-left: 0.375rem solid transparent;
  border-right: 0.375rem solid transparent;

  border-bottom: 0.5rem solid var(--color);
  box-sizing: border-box;
  cursor: pointer;
}

.arrowDown {
  --color: #ddd;
  width: 0;
  height: 0;
  border-left: 0.375rem solid transparent;
  border-right: 0.375rem solid transparent;

  border-top: 0.5rem solid var(--color);
  box-sizing: border-box;
  cursor: pointer;
}

.downArrow::after {
  position: relative;
  content: "";
  width: 0;
  height: 0;
  border-left: 0.375rem solid transparent;
  border-right: 0.375rem solid transparent;

  border-top: 0.5rem solid #ddd;
  box-sizing: border-box;
  cursor: pointer;
  top: 0.5rem;
  margin-left: 0.25rem;
}

.upArrow::after {
  position: relative;
  content: "";
  width: 0;
  height: 0;
  border-left: 0.375rem solid transparent;
  border-right: 0.375rem solid transparent;

  border-bottom: 0.5rem solid #ddd;
  box-sizing: border-box;
  cursor: pointer;
  bottom: 0.5rem;
  margin-left: 0.25rem;
}

.hoverInfo {
  transform-origin: top left;
  position: absolute;
  transition: clip-path 200ms;
  box-sizing: border-box;
  clip-path: polygon(0% 0%, 0% 0%, 0% 0%, 0% 0%);
}

.hoverRadio {
  transform-origin: top left;
  position: absolute;
  transition: clip-path 200ms;
  box-sizing: border-box;
  clip-path: polygon(0% 0%, 0% 100%, 0% 100%, 0% 0%);
}
.hoverRadio.left {
  clip-path: polygon(100% 0%, 100% 100%, 100% 100%, 100% 0%);
}
.hoverRadio.down {
  clip-path: polygon(0% 0%, 100% 0%, 100% 0%, 0% 0%);
}

.keyword {
  font-weight: bold;
}

.ability {
  font-family: "Slider";
  font-weight: normal;
  font-size: 90%;
}

.hoverInfo.down {
  clip-path: polygon(0% 0%, 0% 0%, 0% 0%, 0% 0%);
}

.hoverInfo.up {
  clip-path: polygon(0% 101%, 0% 101%, 0% 101%, 0% 101%);
}

.hoverInfo.left {
  clip-path: polygon(101% 0%, 101% 0%, 101% 0%, 101% 0%);
}

.hoverInfo.down.left {
  clip-path: polygon(0% 0%, 0% 0%, 0% 0%, 0% 0%);
}

.hoverInfo.up.left {
  clip-path: polygon(101% 101%, 101% 101%, 101% 101%, 101% 101%);
}

.hiddenButton {
  opacity: 0;
  transition: opacity 200ms, z-index 200ms;
  z-index: -1;
}

.hoverParent {
  position: relative;
}

.hoverParent.hover {
  z-index: 1005;
}

.hoverParent.hover > .hoverInfo {
  display: flex;
  position: absolute;
  z-index: 1000;
  clip-path: polygon(0% 0%, 0% 101%, 101% 101%, 101% 0%);
}
.hoverParent.hover > .hoverRadio {
  display: flex;
  position: absolute;
  z-index: 1000;
  clip-path: polygon(0% 0%, 0% 101%, 101% 101%, 101% 0%);
}

/* Firefox will have a degraded animation experience, but this will ensure functionality. */
@supports not selector(:has(.hoverParent.hover)) {
  .hoverParent.hover > .hoverInfo {
    clip-path: polygon(-1000% -1000%, -1000% 1000%, 1000% 1000%, 1000% -1000%);
  }
}

.hoverInfo:has(.hoverParent.hover) {
  clip-path: polygon(-1000% -1000%, -1000% 1000%, 1000% 1000%, 1000% -1000%);
}

.hoverInfo:has(.hover)  {
  clip-path: polygon(-1000% -1000%, -1000% 1000%, 1000% 1000%, 1000% -1000%) !important;
}

.hoverInfo:has(.modal.shown) {
  clip-path: polygon(-1000% -1000%, -1000% 1000%, 1000% 1000%, 1000% -1000%);
}

.hiddenButtonParent:hover .hiddenButton {
  opacity: 1;
  transition: opacity 200ms, z-index 200ms;
  z-index: 1000;
}

.fade-enter {
  opacity: 0;
  backdrop-filter: blur(0);
}
.fade-enter-active {
  opacity: 1;
  backdrop-filter: blur(0.5rem);
}
.fade-exit {
  opacity: 1;
  backdrop-filter: blur(0.5rem);
}
.fade-exit-active {
  opacity: 0;
  backdrop-filter: blur(0);
}
.fade-enter-active,
.fade-exit-active {
  transition: opacity 300ms, backdrop-filter 300ms linear;
}

.modal-enter {
  opacity: 0;
  transform: scale(0.9);
}
.modal-enter-active {
  opacity: 1;
  transform: scale(1);
  transition: opacity 300ms, transform 500ms;
}
.modal-exit {
  opacity: 1;
  transform: scale(1);
}
.modal-exit-active {
  opacity: 0;
  transform: scale(0.9);
  transition: opacity 300ms, transform 500ms;
}

.grow-enter {
  transform: scaleY(0);
  transform-origin: top;
}
.grow-enter-active {
  transform: scaleY(1);
  transform-origin: top;
  transition: transform 500ms;
}
.grow-exit {
  transform: scaleY(1);
  transform-origin: top;
}
.grow-exit-active {
  transform: scaleY(0);
  transform-origin: top;
  transition: transform 500ms;
}

.mobileOnly {
  display: none;
}

.nonMobile {
  display: flex;
}

.tabletOnly {
  display: none;
}

.centered {
  text-align: center;
}

@media only screen and (max-width: 75rem) {
  body {
    margin: 0px 4rem;
  }
}

@media only screen and (max-width: 56.25rem) {
  .tabletOnly {
    display: flex;
  }

  .nonTablet {
    display: none;
  }
  
}

@media only screen and (max-width: 56.25rem) {
  body {
    margin: 0px 0.5rem;
  }

  .mobileOnly {
    display: flex;
  }

  .hiddenButton {
    opacity: 1;
    transition: opacity 200ms;
  }

  .nonMobile {
    display: none !important;
  }
}