:root {
  --negative-twelve-pixel: min(
    calc(-12px + (-24 - -12) * ((100vw - 1280px) / (2560 - 1280))),
    -12px
  );
  --negative-two-pixel: min(
    calc(-2px + (-4 - -2) * ((100vw - 1280px) / (2560 - 1280))),
    -2px
  );
  --one-pixel: max(
    calc(1px + (2 - 1) * ((100vw - 1280px) / (2560 - 1280))),
    1px
  );
  --two-pixel: max(
    calc(2px + (4 - 2) * ((100vw - 1280px) / (2560 - 1280))),
    2px
  );
  --three-pixel: max(
    calc(3px + (6 - 3) * ((100vw - 1280px) / (2560 - 1280))),
    3px
  );
  --four-pixel: max(
    calc(4px + (8 - 4) * ((100vw - 1280px) / (2560 - 1280))),
    4px
  );
  --five-pixel: max(
    calc(5px + (10 - 5) * ((100vw - 1280px) / (2560 - 1280))),
    5px
  );
  --six-pixel: max(
    calc(6px + (12 - 6) * ((100vw - 1280px) / (2560 - 1280))),
    6px
  );
  --eight-pixel: max(
    calc(8px + (16 - 8) * ((100vw - 1280px) / (2560 - 1280))),
    8px
  );
  --ten-pixel: max(
    calc(10px + (20 - 10) * ((100vw - 1280px) / (2560 - 1280))),
    10px
  );
  --twelve-pixel: max(
    calc(12px + (24 - 12) * ((100vw - 1280px) / (2560 - 1280))),
    12px
  );
  --fourteen-pixel: max(
    calc(14px + (28 - 14) * ((100vw - 1280px) / (2560 - 1280))),
    14px
  );
  --sixteen-pixel: max(
    calc(16px + (32 - 16) * ((100vw - 1280px) / (2560 - 1280))),
    16px
  );
  --eighteen-pixel: max(
    calc(18px + (36 - 18) * ((100vw - 1280px) / (2560 - 1280))),
    18px
  );
  --twenty-pixel: max(
    calc(20px + (40 - 20) * ((100vw - 1280px) / (2560 - 1280))),
    20px
  );
  --twenty-two-pixel: max(
    calc(22px + (44 - 22) * ((100vw - 1280px) / (2560 - 1280))),
    22px
  );
  --twenty-four-pixel: max(
    calc(24px + (48 - 24) * ((100vw - 1280px) / (2560 - 1280))),
    24px
  );
  --twenty-eight-pixel: max(
    calc(28px + (56 - 28) * ((100vw - 1280px) / (2560 - 1280))),
    28px
  );
  --thirty-pixel: max(
    calc(30px + (60 - 30) * ((100vw - 1280px) / (2560 - 1280))),
    30px
  );
  --thirty-two-pixel: max(
    calc(32px + (64 - 32) * ((100vw - 1280px) / (2560 - 1280))),
    32px
  );
  --thirty-six-pixel: max(
    calc(36px + (72 - 36) * ((100vw - 1280px) / (2560 - 1280))),
    36px
  );
  --forty-pixel: max(
    calc(40px + (80 - 40) * ((100vw - 1280px) / (2560 - 1280))),
    40px
  );
  --forty-eight-pixel: max(
    calc(48px + (96 - 48) * ((100vw - 1280px) / (2560 - 1280))),
    48px
  );
  --fifty-pixel: max(
    calc(50px + (100 - 50) * ((100vw - 1280px) / (2560 - 1280))),
    50px
  );
  --sixty-four-pixel: max(
    calc(64px + (128 - 64) * ((100vw - 1280px) / (2560 - 1280))),
    64px
  );
  --eighty-pixel: max(
    calc(80px + (160 - 80) * ((100vw - 1280px) / (2560 - 1280))),
    80px
  );
  --ninety-six-pixel: max(
    calc(96px + (192 - 96) * ((100vw - 1280px) / (2560 - 1280))),
    96px
  );
  --one-eight-pixel: max(
    calc(108px + (216 - 108) * ((100vw - 1280px) / (2560 - 1280))),
    108px
  );
  --one-twenty-pixel: max(
    calc(120px + (240 - 120) * ((100vw - 1280px) / (2560 - 1280))),
    120px
  );
  --one-forty-pixel: max(
    calc(140px + (280 - 140) * ((100vw - 1280px) / (2560 - 1280))),
    140px
  );
  --two-fifty-six-pixel: max(
    calc(256px + (512 - 256) * ((100vw - 1280px) / (2560 - 1280))),
    256px
  );
  --two-eighty-pixel: max(
    calc(280px + (560 - 280) * ((100vw - 1280px) / (2560 - 1280))),
    280px
  );
  --four-twenty-pixel: max(
    calc(420px + (840 - 420) * ((100vw - 1280px) / (2560 - 1280))),
    420px
  );
  --four-seventy-pixel: max(
    calc(470px + (940 - 470) * ((100vw - 1280px) / (2560 - 1280))),
    470px
  );
}

html {
  box-sizing: border-box;
}
*, *:before, *:after {
  box-sizing: inherit;
}

@font-face {
  font-family: "Slider";
  src: url("Slider_Updated.ttf") format("truetype");
  font-weight: 100;
  font-style: normal;
  font-display: swap;
}

@font-face {
  font-family: "Myriad Pro";
  font-style: normal;
  font-weight: normal;
  src: local("Myriad Pro"), url("MYRIADPRO-REGULAR.woff") format("woff");
  font-display: swap;
}

@font-face {
  font-family: "Source Sans";
  font-style: normal;
  font-weight: normal;
  src: url("SourceSans3-Regular.ttf") format("truetype");
  font-display: swap;
}

body {
  font-family: "slider";
  font-size: var(--sixteen-pixel);
  margin: 0px var(--ninety-six-pixel);
  background-color: #222;
  color: #eee;
}

.symbol {
  font-family: "Source Sans";
}

.icon {
  display: flex;
  align-items: center;
  margin-right: var(--eight-pixel);
  box-sizing: border-box;
}

.clickable {
  cursor: pointer;
  font-weight: bold;
}

.icon.positive {
  color: darkgreen;
  font-size: 120%;
}

.icon.negative {
  color: firebrick;
  font-size: 80%;
  margin: var(--three-pixel) var(--ten-pixel) var(--three-pixel)
    var(--three-pixel);
}

.smallFont {
  font-size: 14px;
  font-size: var(--fourteen-pixel);
}

.mediumFont {
  font-size: 16px;
  font-size: var(--sixteen-pixel);
}

.largeFont {
  font-size: 18px;
  font-size: var(--eighteen-pixel);
  /* font-size: calc(12px + (40 - 12) * ((100vw - 900) / (2560 - 900))); */
}

.hugeFont {
  font-size: 20px;
  font-size: var(--twenty-pixel);
}

.extraLargeFont {
  font-size: 24px;
  font-size: var(--twenty-four-pixel);
}

a {
  all: unset;
  cursor: pointer;
}

a:hover {
  text-shadow: 0 0 4px #eee, 0 0 4px #eee;
  color: #111;
}

a:hover > div {
  background-color: #282828;
  /* box-shadow: 2px 2px 4px #000; */
}

button {
  all: unset;
  font-size: var(--eighteen-pixel);
  font-family: "Myriad Pro";
  background-color: #333;
  color: #eee;
  padding: 3px 5px;
  padding: var(--three-pixel) var(--five-pixel);
  border-radius: var(--four-pixel);
  cursor: pointer;
  box-shadow: 0px 1px 4px black;
  box-shadow: 0px var(--one-pixel) var(--four-pixel) black;
  border: var(--one-pixel) solid #333;
}

button:hover {
  background-color: #444;
}


button.faded {
  background-color: #222;
  color: #555;
  box-sizing: border-box;
  border: var(--one-pixel) solid #333;
}

button.selected {
  border: var(--one-pixel) solid #eee;
  background-color: #444;
  color: #fff;
}

button:disabled {
  background-color: #222;
  color: #555;
  box-shadow: none;
  box-sizing: border-box;
  border: var(--one-pixel) solid #333;
  cursor: default;
}

button:disabled.selected {
  background-color: #222;
  color: #fff;
  box-shadow: none;
  box-sizing: border-box;
  border: var(--one-pixel) solid #eee;
  cursor: default;
}

input[type="text"] {
  background-color: #333;
  color: #fff;
  box-sizing: border-box;
}

input[type="textbox"] {
  background-color: #333;
  color: #eee;
  border: 2px solid #777;
  border-radius: 4px;
  outline: none;
}

.myriadPro {
  font-family: "Myriad Pro";
}

.flexRow {
  display: flex;
  flex-direction: row;
  justify-content: space-evenly;
  align-items: center;
  gap: var(--eight-pixel);
}

.flexColumn {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  gap: var(--eight-pixel);
}

.popupIcon {
  margin-left: var(--eight-pixel);
  font-size: var(--twenty-pixel);
  position: relative;
  cursor: pointer;
  z-index: inherit;
}

.arrowUp {
  --color: #ddd;
  width: 0;
  height: 0;
  border-left: var(--six-pixel) solid transparent;
  border-right: var(--six-pixel) solid transparent;

  border-bottom: var(--eight-pixel) solid var(--color);
  box-sizing: border-box;
  cursor: pointer;
}

.arrowDown {
  --color: #ddd;
  width: 0;
  height: 0;
  border-left: var(--six-pixel) solid transparent;
  border-right: var(--six-pixel) solid transparent;

  border-top: var(--eight-pixel) solid var(--color);
  box-sizing: border-box;
  cursor: pointer;
}

.downArrow::after {
  position: relative;
  content: "";
  width: 0;
  height: 0;
  border-left: var(--six-pixel) solid transparent;
  border-right: var(--six-pixel) solid transparent;

  border-top: var(--eight-pixel) solid #ddd;
  box-sizing: border-box;
  cursor: pointer;
  top: var(--eight-pixel);
  margin-left: var(--four-pixel);
}

.upArrow::after {
  position: relative;
  content: "";
  width: 0;
  height: 0;
  border-left: var(--six-pixel) solid transparent;
  border-right: var(--six-pixel) solid transparent;

  border-bottom: var(--eight-pixel) solid #ddd;
  box-sizing: border-box;
  cursor: pointer;
  bottom: var(--eight-pixel);
  margin-left: var(--four-pixel);
}

.hoverInfo {
  transform-origin: top left;
  position: absolute;
  transition: clip-path 200ms;
  box-sizing: border-box;
  clip-path: polygon(0% 0%, 0% 0%, 0% 0%, 0% 0%);
}

.hoverRadio {
  transform-origin: top left;
  position: absolute;
  transition: clip-path 200ms;
  box-sizing: border-box;
  clip-path: polygon(0% 0%, 0% 100%, 0% 100%, 0% 0%);
}
.hoverRadio.left {
  clip-path: polygon(100% 0%, 100% 100%, 100% 100%, 100% 0%);
}
.hoverRadio.down {
  clip-path: polygon(0% 0%, 100% 0%, 100% 0%, 0% 0%);
}

.keyword {
  font-weight: bold;
}

.ability {
  font-family: "Slider";
  font-weight: normal;
  font-size: 90%;
}

.hoverInfo.down {
  clip-path: polygon(0% 0%, 0% 0%, 0% 0%, 0% 0%);
}

.hoverInfo.up {
  clip-path: polygon(0% 101%, 0% 101%, 0% 101%, 0% 101%);
}

.hoverInfo.left {
  clip-path: polygon(101% 0%, 101% 0%, 101% 0%, 101% 0%);
}

.hoverInfo.down.left {
  clip-path: polygon(0% 0%, 0% 0%, 0% 0%, 0% 0%);
}

.hoverInfo.up.left {
  clip-path: polygon(101% 101%, 101% 101%, 101% 101%, 101% 101%);
}

.hiddenButton {
  opacity: 0;
  transition: opacity 200ms, z-index 200ms;
  z-index: -1;
}

.hoverParent {
  position: relative;
}

.hoverParent.hover {
  z-index: 1005;
}

.hoverParent.hover > .hoverInfo {
  display: flex;
  position: absolute;
  z-index: 1000;
  clip-path: polygon(0% 0%, 0% 101%, 101% 101%, 101% 0%);
}
.hoverParent.hover > .hoverRadio {
  display: flex;
  position: absolute;
  z-index: 1000;
  clip-path: polygon(0% 0%, 0% 101%, 101% 101%, 101% 0%);
}

/* Firefox will have a degraded animation experience, but this will ensure functionality. */
@supports not selector(:has(.hoverParent.hover)) {
  .hoverParent.hover > .hoverInfo {
    clip-path: polygon(-1000% -1000%, -1000% 1000%, 1000% 1000%, 1000% -1000%);
  }
}

.hoverInfo:has(.hoverParent.hover) {
  clip-path: polygon(-1000% -1000%, -1000% 1000%, 1000% 1000%, 1000% -1000%);
}

.hoverInfo:has(.modal.shown) {
  clip-path: polygon(-1000% -1000%, -1000% 1000%, 1000% 1000%, 1000% -1000%);
}

.hiddenButtonParent:hover .hiddenButton {
  opacity: 1;
  transition: opacity 200ms, z-index 200ms;
  z-index: 1000;
}

.fade-enter {
  opacity: 0;
}
.fade-enter-active {
  opacity: 1;
}
.fade-exit {
  opacity: 1;
}
.fade-exit-active {
  opacity: 0;
}
.fade-enter-active,
.fade-exit-active {
  transition: opacity 300ms;
}

.modal-enter {
  opacity: 0;
  transform: scale(0.9);
}
.modal-enter-active {
  opacity: 1;
  transform: scale(1);
  transition: opacity 300ms, transform 500ms;
}
.modal-exit {
  opacity: 1;
  transform: scale(1);
}
.modal-exit-active {
  opacity: 0;
  transform: scale(0.9);
  transition: opacity 300ms, transform 500ms;
}

.grow-enter {
  transform: scaleY(0);
  transform-origin: top;
}
.grow-enter-active {
  transform: scaleY(1);
  transform-origin: top;
  transition: transform 500ms;
}
.grow-exit {
  transform: scaleY(1);
  transform-origin: top;
}
.grow-exit-active {
  transform: scaleY(0);
  transform-origin: top;
  transition: transform 500ms;
}

.mobileOnly {
  display: none;
}

.nonMobile {
  display: flex;
}

.tabletOnly {
  display: none;
}

.centered {
  text-align: center;
}

@media only screen and (max-width: 1279px) {
  body {
    margin: 0px 64px;
  }
}

@media only screen and (max-width: 1023px) {
  .tabletOnly {
    display: flex;
  }

  .nonTablet {
    display: none;
  }
  
}

@media only screen and (max-width: 900px) {
  body {
    margin: 0px 8px;
  }

  .mobileOnly {
    display: flex;
  }

  .hiddenButton {
    opacity: 1;
    transition: opacity 200ms;
  }

  .nonMobile {
    display: none;
  }
}